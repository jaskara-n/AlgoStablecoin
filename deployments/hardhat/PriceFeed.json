{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "proxyAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readDataFeed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x42e7d9f11b2660487ecc587a8214c2b486648d5b920fda4a477d6ff737ae89a3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "240871",
    "logsBloom": "0x
    "blockHash": "0x5246959c803ad53afb4975204fd30064b6ca3ede78e8afedae3f8924b358e579",
    "transactionHash": "0x42e7d9f11b2660487ecc587a8214c2b486648d5b920fda4a477d6ff737ae89a3",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "240871",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "de75b78984d8e9300c1e37ced51df049",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"proxyAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readDataFeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/priceFeed.sol\":\"PriceFeed\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@api3/airnode-protocol-v1/contracts/api3-server-v1/proxies/interfaces/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @dev See DapiProxy.sol for comments about usage\\ninterface IProxy {\\n    function read() external view returns (int224 value, uint32 timestamp);\\n\\n    function api3ServerV1() external view returns (address);\\n}\\n\",\"keccak256\":\"0x3ad69ef6ff3de4056ec43eb8b47465f3d896f88e95cfffb909a6d057b91db17b\",\"license\":\"MIT\"},\"@api3/contracts/v0.8/interfaces/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@api3/airnode-protocol-v1/contracts/api3-server-v1/proxies/interfaces/IProxy.sol\\\";\\n\",\"keccak256\":\"0x46e0969d4682b2dad5c56a5f278ee447a3085fcc66c4e8bd261ef9cdcccfdc0e\",\"license\":\"MIT\"},\"contracts/priceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.19;\\r\\nimport \\\"@api3/contracts/v0.8/interfaces/IProxy.sol\\\";\\r\\n\\r\\ncontract PriceFeed {\\r\\n    address public proxyAddress = 0x26690F9f17FdC26D419371315bc17950a0FC90eD;\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    // Updating the proxy contract address is a security-critical\\r\\n    // action. In this example, only the owner is allowed to do so.\\r\\n    // Get your pricefeed at https://market.api3.org/dapis\\r\\n\\r\\n    function readDataFeed() public view returns (uint256, uint256) {\\r\\n        (int224 value, uint256 timestamp) = IProxy(proxyAddress).read();\\r\\n        //convert price to UINT256\\r\\n        uint256 price = uint224(value);\\r\\n        return (price, timestamp);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x743a37459e0e78b7bc439f8357f306be6d414987546d6b5d72b38efd8ba3feff\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040527326690f9f17fdc26d419371315bc17950a0fc90ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b506102f8806100746000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806323f5c02d1461003b57806380eb9be614610059575b600080fd5b610043610078565b60405161005091906101ab565b60405180910390f35b61006161009c565b60405161006f9291906101df565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166357de26a46040518163ffffffff1660e01b81526004016040805180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610282565b63ffffffff16915091506000827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690508082945094505050509091565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101958261016a565b9050919050565b6101a58161018a565b82525050565b60006020820190506101c0600083018461019c565b92915050565b6000819050919050565b6101d9816101c6565b82525050565b60006040820190506101f460008301856101d0565b61020160208301846101d0565b9392505050565b600080fd5b600081601b0b9050919050565b6102238161020d565b811461022e57600080fd5b50565b6000815190506102408161021a565b92915050565b600063ffffffff82169050919050565b61025f81610246565b811461026a57600080fd5b50565b60008151905061027c81610256565b92915050565b6000806040838503121561029957610298610208565b5b60006102a785828601610231565b92505060206102b88582860161026d565b915050925092905056fea2646970667358221220874175f4a31ade67f977f36def227adc5fcc4579580c60033f37d77ed0bd020c64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806323f5c02d1461003b57806380eb9be614610059575b600080fd5b610043610078565b60405161005091906101ab565b60405180910390f35b61006161009c565b60405161006f9291906101df565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166357de26a46040518163ffffffff1660e01b81526004016040805180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610282565b63ffffffff16915091506000827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690508082945094505050509091565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101958261016a565b9050919050565b6101a58161018a565b82525050565b60006020820190506101c0600083018461019c565b92915050565b6000819050919050565b6101d9816101c6565b82525050565b60006040820190506101f460008301856101d0565b61020160208301846101d0565b9392505050565b600080fd5b600081601b0b9050919050565b6102238161020d565b811461022e57600080fd5b50565b6000815190506102408161021a565b92915050565b600063ffffffff82169050919050565b61025f81610246565b811461026a57600080fd5b50565b60008151905061027c81610256565b92915050565b6000806040838503121561029957610298610208565b5b60006102a785828601610231565b92505060206102b88582860161026d565b915050925092905056fea2646970667358221220874175f4a31ade67f977f36def227adc5fcc4579580c60033f37d77ed0bd020c64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6788,
        "contract": "contracts/priceFeed.sol:PriceFeed",
        "label": "proxyAddress",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}